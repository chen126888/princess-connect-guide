generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Character {
  id          String @id
  name        String @unique @map("角色名稱")
  nickname    String? @map("暱稱")
  position    String @map("位置")
  role        String? @map("角色定位")
  rarity      String? @map("常駐/限定")
  element     String? @map("屬性")
  ability     String? @map("能力偏向")
  arena_atk   String? @map("競技場進攻")
  arena_def   String? @map("競技場防守")
  clan_battle String? @map("戰隊戰")
  dungeon     String? @map("深域及抄作業")
  description String? @map("說明")
  avatar      String? @map("頭像檔名")
  avatar_6    String? @map("六星頭像檔名")
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("characters")
}


model Admin {
  id        String   @id
  username  String   @unique
  password  String
  name      String?
  isActive  Boolean  @default(true)
  role      String   @default("admin") // "superadmin" or "admin"
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("admins")
}

model ClanBattle {
  id    Int @id @default(autoincrement())
  year  Int
  month Int
  teams Team[]

  @@map("clan_battles")
}

model Team {
  id             Int         @id @default(autoincrement())
  description    String      @db.Text
  characters     Json        @db.JsonB
  source_url     String?     @db.VarChar
  boss_number    Int
  clan_battle_id Int
  clan_battle    ClanBattle  @relation(fields: [clan_battle_id], references: [id], onDelete: Cascade)

  @@map("teams")
}
